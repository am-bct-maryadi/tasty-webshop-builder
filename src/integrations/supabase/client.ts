/* eslint-disable no-var */
// This file is automatically generated. Do not edit it directly.
import { createClient, SupabaseClient } from '@supabase/supabase-js';
import type { Database } from './types';

declare global {
  interface Window {
    __supabase__?: SupabaseClient<Database>;
  }
}

const SUPABASE_URL = "https://pelytyjonytekqdiwjri.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBlbHl0eWpvbnl0ZWtxZGl3anJpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIwMjU1OTEsImV4cCI6MjA2NzYwMTU5MX0.pUzNiKuykr7Ci7qfEgEttJ3HbRMaq50bKrT54ped0Nc";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

let supabaseInstance: ReturnType<typeof createClient<Database>>;

try {
  supabaseInstance =
    typeof window !== "undefined"
      ? (window.__supabase__ ??= createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
          auth: {
            storage: localStorage,
            persistSession: true,
            autoRefreshToken: true,
          }
        }))
      : createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
          auth: {
            storage: localStorage,
            persistSession: true,
            autoRefreshToken: true,
          }
        });
  if (!supabaseInstance) {
    // Should never happen, but log just in case
    // eslint-disable-next-line no-console
    console.error('[Supabase] Client instance is undefined after initialization!');
  }
} catch (e) {
  // eslint-disable-next-line no-console
  console.error('[Supabase] Error initializing Supabase client:', e);
  supabaseInstance = undefined as any;
}

export const supabase = supabaseInstance;